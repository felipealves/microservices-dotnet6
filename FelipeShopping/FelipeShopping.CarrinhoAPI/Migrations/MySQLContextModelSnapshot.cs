// <auto-generated />
using FelipeShopping.CarrinhoAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FelipeShopping.CarrinhoAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    partial class MySQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FelipeShopping.CarrinhoAPI.Model.CarrinhoDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CarrinhoHeaderId")
                        .HasColumnType("bigint");

                    b.Property<int>("Contador")
                        .HasColumnType("int")
                        .HasColumnName("Contador");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoHeaderId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("carrinho_detail");
                });

            modelBuilder.Entity("FelipeShopping.CarrinhoAPI.Model.CarrinhoHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("CodigoCupom")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("codigo_cupom");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.ToTable("carrinho_header");
                });

            modelBuilder.Entity("FelipeShopping.CarrinhoAPI.Model.Produto", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("CategoriaNome")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoria_nome");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("imagem_url");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("FelipeShopping.CarrinhoAPI.Model.CarrinhoDetail", b =>
                {
                    b.HasOne("FelipeShopping.CarrinhoAPI.Model.CarrinhoHeader", "CarrinhoHeader")
                        .WithMany()
                        .HasForeignKey("CarrinhoHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FelipeShopping.CarrinhoAPI.Model.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarrinhoHeader");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
